{"ast":null,"code":"var _jsxFileName = \"/home/andrej/Desktop/E11/live-coding/jul/11-07/exercise/countries-app/src/components/AllCountries.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\"; // Components\n\nimport CountryCard from \"./CountryCard\";\n/*\n- in AllCountries component:\n1) fetch all the countries on load from restcountries using this URL https://restcountries.com/v3.1/all\n    1. create fetcher function\n    2. useEffect - import it\n                 - use the fetcher function inside of it\n\n\n2) save the received array of countries in a local state {countries} and prevent an infinite render\n  1. useState - import it\n              - use the useState hook\n              - when the response is here, we need to save the response inside state\n\n3) show each country in the array {countries} using the template component CountryCard\n  1. import CountryCard\n  2. map over the countries array, and use CountryCard component for each element in the array\n\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst fetchAllCountries = async () => {\n  const response = await fetch(\"https://restcountries.com/v3.1/all\");\n  const data = await response.json();\n  return data;\n};\n\nexport default function AllCountries() {\n  _s();\n\n  const [countries, setCountries] = useState([]);\n  useEffect(() => {\n    fetchAllCountries().then(data => setCountries(data));\n  }, []);\n  console.log(countries);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cardsContainer\",\n    children: countries.map((country, i) => /*#__PURE__*/_jsxDEV(CountryCard, {\n      country: country\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AllCountries, \"u5xOCJaVOCLA9QSfvEC1BLxOVIw=\");\n\n_c = AllCountries;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllCountries\");","map":{"version":3,"names":["React","useEffect","useState","CountryCard","fetchAllCountries","response","fetch","data","json","AllCountries","countries","setCountries","then","console","log","map","country","i"],"sources":["/home/andrej/Desktop/E11/live-coding/jul/11-07/exercise/countries-app/src/components/AllCountries.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\n// Components\nimport CountryCard from \"./CountryCard\";\n\n/*\n- in AllCountries component:\n1) fetch all the countries on load from restcountries using this URL https://restcountries.com/v3.1/all\n    1. create fetcher function\n    2. useEffect - import it\n                 - use the fetcher function inside of it\n\n\n2) save the received array of countries in a local state {countries} and prevent an infinite render\n  1. useState - import it\n              - use the useState hook\n              - when the response is here, we need to save the response inside state\n\n3) show each country in the array {countries} using the template component CountryCard\n  1. import CountryCard\n  2. map over the countries array, and use CountryCard component for each element in the array\n\n*/\n\nconst fetchAllCountries = async () => {\n  const response = await fetch(\"https://restcountries.com/v3.1/all\");\n  const data = await response.json();\n  return data;\n};\n\nexport default function AllCountries() {\n  const [countries, setCountries] = useState([]);\n\n  useEffect(() => {\n    fetchAllCountries().then((data) => setCountries(data));\n  }, []);\n\n  console.log(countries);\n\n  return (\n    <div className=\"cardsContainer\">\n      {countries.map((country, i) => (\n        <CountryCard key={i} country={country} />\n      ))}\n    </div>\n  );\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,iBAAiB,GAAG,YAAY;EACpC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAD,CAA5B;EACA,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;EACA,OAAOD,IAAP;AACD,CAJD;;AAMA,eAAe,SAASE,YAAT,GAAwB;EAAA;;EACrC,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;EAEAD,SAAS,CAAC,MAAM;IACdG,iBAAiB,GAAGQ,IAApB,CAA0BL,IAAD,IAAUI,YAAY,CAACJ,IAAD,CAA/C;EACD,CAFQ,EAEN,EAFM,CAAT;EAIAM,OAAO,CAACC,GAAR,CAAYJ,SAAZ;EAEA,oBACE;IAAK,SAAS,EAAC,gBAAf;IAAA,UACGA,SAAS,CAACK,GAAV,CAAc,CAACC,OAAD,EAAUC,CAAV,kBACb,QAAC,WAAD;MAAqB,OAAO,EAAED;IAA9B,GAAkBC,CAAlB;MAAA;MAAA;MAAA;IAAA,QADD;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAOD;;GAhBuBR,Y;;KAAAA,Y"},"metadata":{},"sourceType":"module"}